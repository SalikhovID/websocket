<?php

use Workerman\Worker;

require_once __DIR__ . '/../vendor/autoload.php';
require_once __DIR__ . '/../model/Model.php';


// Create a Websocket server
//$ws_worker = new Worker('websocket://127.0.0.1:61523');
$ws_worker = new Worker('websocket://192.168.100.34:61523');

// 4 processes
$ws_worker->count = 1;
$ws_worker->name = 'test';

// Emitted when new connection come
$ws_worker->onConnect = function ($connection){
    echo "New connection\n";
    $model = new Model();
    $ip = Model::ipPrepare($connection->getRemoteAddress());
    $result = $model->getId($ip);
    $result['isFirstConnect'] = true;
    $result['messages'] = $model->getAllMessages();
    $connection->send(json_encode($result));
};

// Emitted when data received
$ws_worker->onMessage = function ($connection, $data) use ($ws_worker) {
    $result = json_decode($data,true);
    $ip = Model::ipPrepare($connection->getRemoteAddress());
    $model = new Model();
    $res = $model->getId($ip);
    $result['remote_ip'] = $res['remote_ip'];
    $result['id'] = $res['id'];
    $result['isFirstConnect'] = false;
    $test = $model->saveMessage($result['message'],$result['remote_ip'],$result['id']);
    foreach ($ws_worker->connections as $clientConnection){
        if(Model::ipPrepare($clientConnection->getRemoteAddress()) != $ip){
            $clientConnection->send(json_encode($result));
        }
    }
};

// Emitted when connection closed
$ws_worker->onClose = function ($connection) {
    echo "Connection closed\n";
};

// Run worker
Worker::runAll();